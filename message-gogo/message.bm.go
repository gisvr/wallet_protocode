// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: message.proto

package pbmessage

import (
	"context"

	bm "github.com/gisvr/golib/net/http/blademaster"
	"github.com/gisvr/golib/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathNotifyCenterNotify = "/v1/notify"

const (
	PermissionNotify = "PermissionNotifyCenterNotify"
)

type Permission struct {
	Module      string
	Name        string
	Url         string
	Description string
}

var Perms = []Permission{
	Permission{"NotifyCenter", PermissionNotify, PathNotifyCenterNotify, " 发出通知"},
}

// NotifyCenterBMServer is the server API for NotifyCenter service.
type NotifyCenterBMServer interface {
	// 发出通知
	Notify(ctx context.Context, req *NotifyRequest) (resp *NotifyReponse, err error)
}

var NotifyCenterSvc NotifyCenterBMServer

type JSONReaderFunc func(c *bm.Context, data interface{}, err error)

func DefaultJSONReader(c *bm.Context, data interface{}, err error) {
	c.JSON(data, err)
}

var JF JSONReaderFunc = DefaultJSONReader

func NotifyCenterNotify(c *bm.Context) {
	p := new(NotifyRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := NotifyCenterSvc.Notify(c, p)
	JF(c, resp, err)
}

// RegisterNotifyCenterBMServer Register the blademaster route
func RegisterNotifyCenterBMServer(e *bm.Engine, server NotifyCenterBMServer) {
	NotifyCenterSvc = server
	e.POST(PathNotifyCenterNotify, NotifyCenterNotify)
}
